{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api/blogs\";\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteblog = (id, token) => {\n  const request = axios(config);\n  return request.then(response => response.data);\n  var config = {\n    method: \"delete\",\n    url: `${baseUrl}/${id}`,\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n  deleteblog\n};","map":{"version":3,"sources":["C:/Users/62487/Documents/GitHub/fso_part5/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","request","get","then","response","data","create","newObject","config","headers","Authorization","post","update","id","put","deleteblog","method","url"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC9BF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACA,CAFD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAGN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAhB;AACA,SAAOK,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACA,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAOC,SAAP,IAAqB;AACnC,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEb;AAAjB;AADK,GAAf;AAIA,QAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBW,SAApB,EAA+BC,MAA/B,CAAvB;AACA,SAAOJ,QAAQ,CAACC,IAAhB;AACA,CAPD;;AASA,MAAMO,MAAM,GAAG,CAACC,EAAD,EAAKN,SAAL,KAAmB;AACjC,QAAMN,OAAO,GAAGN,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGiB,EAAG,EAA3B,EAA8BN,SAA9B,CAAhB;AACA,SAAON,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACA,CAHD;;AAKA,MAAMU,UAAU,GAAG,CAACF,EAAD,EAAIhB,KAAJ,KAAc;AAChC,QAAMI,OAAO,GAAGN,KAAK,CAACa,MAAD,CAArB;AACA,SAAOP,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAcA,QAAQ,CAACC,IAApC,CAAP;AACA,MAAIG,MAAM,GAAG;AACZQ,IAAAA,MAAM,EAAE,QADI;AAEZC,IAAAA,GAAG,EAAG,GAAErB,OAAQ,IAAGiB,EAAG,EAFV;AAGZJ,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASb,KAAM;AADvB;AAHG,GAAb;AAQA,CAXD;;AAaA,eAAe;AAAEG,EAAAA,MAAF;AAAUM,EAAAA,MAAV;AAAkBM,EAAAA,MAAlB;AAA0Bd,EAAAA,QAA1B;AAAoCiB,EAAAA;AAApC,CAAf","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/blogs\";\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n\ttoken = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = async (newObject) => {\r\n\tconst config = {\r\n\t\theaders: { Authorization: token },\r\n\t};\r\n\r\n\tconst response = await axios.post(baseUrl, newObject, config);\r\n\treturn response.data;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst deleteblog = (id,token) => {\r\n\tconst request = axios(config);\r\n\treturn request.then((response) => response.data);\r\n\tvar config = {\r\n\t\tmethod: \"delete\",\r\n\t\turl: `${baseUrl}/${id}`,\r\n\t\theaders: {\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t},\r\n\t};\r\n\r\n};\r\n\r\nexport default { getAll, create, update, setToken, deleteblog };\r\n"]},"metadata":{},"sourceType":"module"}