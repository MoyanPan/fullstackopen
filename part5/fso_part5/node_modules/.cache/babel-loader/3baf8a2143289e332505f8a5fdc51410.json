{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\62487\\\\Documents\\\\GitHub\\\\fso_part5\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [login, setLogin] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedNoteappUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      res.setLogin(true);\n    } catch (exception) {\n      console.log(exception);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: login === false ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          name: \"Username\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          name: \"Password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ipvOQ4Iv73rCU24BKbok17CcLwc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/62487/Documents/GitHub/fso_part5/bloglist-frontend/src/App.js"],"names":["useState","useEffect","Blog","blogService","Login","App","blogs","setBlogs","login","setLogin","username","setUsername","password","setPassword","user","setUser","getAll","then","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","setToken","token","res","exception","console","log","target","value","map","blog","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,IAAD,CAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACa,MAAZ,GAAqBC,IAArB,CAA0BX,KAAK,IAC7BC,QAAQ,CAAED,KAAF,CADV;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMY,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMN,IAAI,GAAG,MAAMO,YAAY,CAACb,KAAb,CAAmB;AACpCE,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB;AAIAU,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CACE,mBADF,EACuBC,IAAI,CAACC,SAAL,CAAeZ,IAAf,CADvB;AAGAX,MAAAA,WAAW,CAACwB,QAAZ,CAAqBb,IAAI,CAACc,KAA1B;AACAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAgB,MAAAA,GAAG,CAACpB,QAAJ,CAAa,IAAb;AACD,KAbD,CAaE,OAAOqB,SAAP,EAAkB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACD;AACF,GAlBD;;AAqBA,sBACE;AAAA,cACCtB,KAAK,KAAK,KAAV,gBAAkB;AAAM,MAAA,QAAQ,EAAEU,WAAhB;AAAA,8BACjB;AAAA,4CAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,KAAK,EAAER,QAFP;AAGA,UAAA,IAAI,EAAC,UAHL;AAIA,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEuB,cAAAA;AAAF,aAAD;AAAA,mBAAgBtB,WAAW,CAACsB,MAAM,CAACC,KAAR,CAA3B;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,eAUjB;AAAA,4CAEI;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,KAAK,EAAEtB,QAFP;AAGA,UAAA,IAAI,EAAC,UAHL;AAIA,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEqB,cAAAA;AAAF,aAAD;AAAA,mBAAgBpB,WAAW,CAACoB,MAAM,CAACC,KAAR,CAA3B;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAViB,eAmBjB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBiB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAqBD;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC5B,KAAK,CAAC6B,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA,mBADF;AA+BD,CAlED;;GAAMhC,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport Login from \"./components/Login\"\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [login, setLogin] = useState(false)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      \r\n      window.localStorage.setItem(\r\n        \"loggedNoteappUser\", JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      res.setLogin(true)\r\n    } catch (exception) {\r\n      console.log(exception)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    {login === false ? <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form> :     \r\n    <div>\r\n    <h2>blogs</h2>\r\n    {blogs.map(blog =>\r\n      <Blog key={blog.id} blog={blog} />\r\n    )}\r\n    </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}